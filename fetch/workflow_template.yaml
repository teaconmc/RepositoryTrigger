name: '$title'
on:
  push:
    paths:
      - '$workflow_file'
      - '$info_dir/HEAD'
  workflow_dispatch:
    inputs:
      commit:
        description: 'The commit hash you wish to build.'
        required: false
        type: string
jobs:
  publish:
    name: '$job_title'
    environment: Build
    runs-on: ubuntu-22.04
    env:
      BILUOCHUN_URL: https://biluochun.teacon.cn
      CONTEST_SEQ: '$contest_seq'
      CONTEST_SLUG: $contest_slug
      CONTEST_TITLE: '$contest_title'
      TEAM_ID: '$team_id'
      TEAM_SEQ: '$team_seq'
    steps:
      - name: Checkout Build Environment
        uses: actions/checkout@v4
      # Setup Microsoft JDK build. This should be the one used by official Minecraft Launcher.
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'
      - name: Apply Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: $${{ runner.os }}-gradle-$${{ hashFiles('**/*.gradle*') }}
          restore-keys:
            $${{ runner.os }}-gradle-
      # We cannot use action/checkout@v2 because it does not support non-GitHub repositroy.
      # The clone logic used here is adapted from https://stackoverflow.com/a/3489576 for
      # sake of a faster build.
      - name: 'Checkout Repository for $job_title'
        shell: bash
        run: |
          mkdir -p build/repo
          cd build/repo
          git init
          git remote add origin `cat ../../$info_dir/remote`
          git fetch --depth=1 origin `cat ../../$info_dir/HEAD` || { echo '::error::Git 仓库检出失败，请检查仓库是否可公开访问！'; exit -1; }
          git reset --hard `cat ../../$info_dir/HEAD`
          git submodule init
          git submodule update
          [ -f build.gradle ] || [ -f build.gradle.kts ] || { echo '::error::Git 仓库检出疑似失败，请检查碧螺春中分支名是否正确！'; exit -1; }
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: false
      - name: Validate Gradle Wrapper
        id: gradle_wrapper_check
        continue-on-error: true
        uses: gradle/actions/wrapper-validation@v3
        with:
          min-wrapper-count: 1
      - name: Artifact Building
        id: building
        shell: bash
        env:
          GRADLE_WRAPPER_CHECK: $${{ steps.gradle_wrapper_check.outcome == 'success' }}
          GITHUB_USERNAME: 'teacon-bot[bot]'
          GITHUB_TOKEN: $${{ secrets.GITHUB_TOKEN }}
        run: cd build && ./build.sh
      # We need at least Python 3.11 to ensure existence of tomllib (see PEP 680)
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' 
      - name: Mod Description File Validation
        id: description
        shell: bash
        run: ./build/mods_toml.py
      - name: Prepare for Dedicated Server Launching Test
        id: dedicated_server_launching_setup
        shell: bash
        env:
          BILUOCHUN_TOKEN: $${{ secrets.BILUOCHUN_TOKEN }}
        run: cd build && ./pre-server-test.sh
      - name: Dedicated Server Launching Test
        id: dedicated_server_launching
        timeout-minutes: 10
        uses: teaconmc/dedicated-launch-test@1.21-neoforge
        with:
          extra: build/all-deps.json
          mod: $${{ steps.building.outputs.artifact }}
      - name: Publish
        id: publication
        shell: bash
        env:
          CONTEST_ID: $contest_slug
          BILUOCHUN_TOKEN: $${{ secrets.BILUOCHUN_TOKEN }}
          S3_ENDPOINT: $${{ secrets.S3_ENDPOINT }}
          AWS_ACCESS_KEY_ID: $${{ secrets.S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: $${{ secrets.S3_SECRET_KEY }}
          # https://github.com/aws/aws-cli/issues/5623
          AWS_EC2_METADATA_DISABLED: 'true'
        run: cd build && ./publish.sh
      - name: Failure notification
        id: failure_notification
        if: failure()
        shell: bash
        env: 
          BILUOCHUN_TOKEN: $${{ secrets.BILUOCHUN_TOKEN }}
        run: cd build && ./failure-callback.sh
# Change this counter to trigger all mod rebuild 
